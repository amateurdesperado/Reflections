#here we go again
commands learned:
    git init #makes a new repository inside a dir
    git status #shows wtf is going on in a repository

why make a git repository in a dir - in order to track the history

there is a middle ground between a commit and a non-committed file called
staging area, it allows u to decide what, when and how u wanna commit
command learned:
    git add #adds file(-s) to the staging area

commands learned:
    git diff(no args) #compares the working dir to the staging area
    git diff --staged #compares staging area to the most recent commit

branches are a cool ting, they allow u to make an alternative
version of ur shit
commands learned:
    git branch #check ur current branch
    git branch [branch] #create new branch
    git checkout [branch] #switch to the desired branch

diagrams help visualize branch structure
the git checkout [id] creates a microbranch in the HEAD state and this weird
branch stays if u save the changes
